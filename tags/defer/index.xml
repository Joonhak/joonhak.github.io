<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Defer on 프린이의 DEVLOG</title>
    <link>https://joonhak.github.io/tags/defer/</link>
    <description>Recent content in Defer on 프린이의 DEVLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 17 Mar 2019 18:32:46 +0900</lastBuildDate>
    
	<atom:link href="https://joonhak.github.io/tags/defer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go defer와 panic</title>
      <link>https://joonhak.github.io/posts/go-defer%EC%99%80-panic/</link>
      <pubDate>Sun, 17 Mar 2019 18:32:46 +0900</pubDate>
      
      <guid>https://joonhak.github.io/posts/go-defer%EC%99%80-panic/</guid>
      <description>최근 Golang에 흥미가 생겨 열심히 따라치는 공부하는 중인데, 이해가 안가는 부분이 있어서 정리해보고자 글을 작성한다.
Go의 defer 우선 Go의 defer 키워드는 뒤에 오는 코드를 나중에 (= 해당 함수 return 직전 또는 블록을 벗어나는 시점에) 실행시키는 키워드다. 한국어로는 지연호출이라고 볼 수 있겠다. 찾아본바로는 defer로 선언된 함수들을 stack에 담았다가 함수 종료 직전에 실행시킨다고 한다. 따라서 defer된 함수들의 호출 순서는 &amp;lsquo;먼저&amp;rsquo; 선언된 defer 함수가 &amp;lsquo;나중에&amp;rsquo; 실행된다.
func main() { defer fmt.Println(&amp;#34;world!&amp;#34;) defer fmt.</description>
    </item>
    
  </channel>
</rss>